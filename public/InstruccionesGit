sudo apt install git

0. Ver la lista de comandos de Git
	git

1. Inicializar un proyecto en working area
	git init

2. Configurar Git 
	//ver la lista de comandos de configuracion
	git config

	//ver la configuracion actual
	git config --list

	//configurar
	git config --global user.name “jangeltr”
	git config --global user.email “jangeltr@hotmail.com”
	git config --global color.ui true
	  
3. Agregar al staging area todos los archivos del proyecto
	git add .
	git rm --cached archivo.ext  //para quitar un archivo del staging area dejandolo en el 
					working area

4. Para ver el estado de mi proyecto y ver cuales archivos han sufrido cambios
	git status
	git diff      //Para ver cambios entre working area y staging area
	//cuando hay mucha info       q para salir

5. Cuando tenemos una version terminada y la subimos al repository
	git commit -m “Nombre para identificar la version”

6. Para ver el historial de commits
	git log
	git log --stat  //Muestra los cambios entre commit y commit
	//cuando hay mucha info       q para salir
	
7. Para ver los cambios entre un commit y otro
	git diff codigoCommitMasViejo codigoCommitMasNuevo

8. Para ver los cambios que se han realizado a un archivo
	git show archivo.txt
	
___________________________________________________________________________
DESHACER CAMBIOS
9. Desahacer los cambios en todos los archivos volviendo al commit especificado en el codigo
	//deja el staging area intacto
	git reset  codigoCommit  --soft
	//regresa al commit especificado quitando tambien todo del staging area
	git reset  codigoCommit  --hard

10. Deshacer cambios en algun archivo devolviendolo a un commit especifico
	git checkout codigoCommitAntiguo archivo.ext	
	//sin modificar el staging area
	//Deja todos los commits intactos, asi que podemos ver el archivo y luego traer otra vez el
 	//archivo del ultimo commit
	git checkout codigoCommitMasNuevo archivo.ext
	
___________________________________________________________________________
RAMAS
El archivo llamado .gitignore es una archivo que contendra las carpetas o arhivos a ignorar

Para ver el estatus del proyecto y ver en que rama estoy
	
	git status

Para ver que ramas del proyecto hay y en que rama estoy

	git branch

Crear una nueva rama del proyecto

	git branch “nuevaRama”

Cambiarse a otra rama

	git checkout “OtraRama”

	//Si en el proyecto local tengo varias ramas y me cambio de rama sin hacer commit se pierden los cambios hechos a los archivos despues del ultimo commit de esa rama.

Fucionar 2 ramas

	//estando en la rama principal

	git merge rama2 “mensaje porque se crea un nuevo commit en la rama principal”
	
_________________________________________________________________________
GITHUB
11. Para enlazar nuestro proyecto git a github

	git remote add origin https://github.com/jangeltr/TecNM_Tlajomulco_SISAE.git
	
	//para ver todos los proyectos enlazados
	get remote -v
	//para quitar uno 
	git remote rm origin

12. Para subir nuestro proyecto git a github

	git push -u origin main	//se especifica la rama a subir
		username: jangeltr
		pass:Mitssy0612
		token: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

	//si al subir, alguien mas subio antes cambios a esa rama, debemos primero descargar los
 	//cambios y mezclarlos localmente
	git pull origin main						//descarga y hace merge 
 	git pull origin main	--allow-unrelated-histories 		//descarga ramas que no
									//partieron del mismo punto
	git push -u origin main	//ahora si ya se sube
	//se pueden hacer cambios a los archivos online y commits y ya se descargan y
	//convinan con los locales
	git pull origin main

13. Descargar el proyecto de github completo

	git clone https://github.com/jangeltr/TecNM_Tlajomulco_SISAE.git

14. Para bajar los cambios subidos a github
	git pull origin main
